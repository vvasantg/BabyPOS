using System.Net.Http;
using System.Net.Http.Json;
using System.Threading.Tasks;
using BabyPOS_Web.Models;
using System.Text.Json;

namespace BabyPOS_Web.ViewModels
{
    public class LoginViewModel
    {
        private readonly HttpClient _http;
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public string ErrorMessage { get; set; } = string.Empty;
        public string? Token { get; set; }
        public User? CurrentUser { get; set; }
        private string? babyApiBaseUrl;

        public LoginViewModel(HttpClient http)
        {
            _http = http;
        }

        private async Task EnsureApiBaseUrlAsync()
        {
            if (string.IsNullOrEmpty(babyApiBaseUrl))
            {
                var config = await _http.GetFromJsonAsync<AppConfig>("appsettings.json");
                babyApiBaseUrl = config?.BabyApiBaseUrl;
            }
        }

        public async Task<bool> LoginAsync()
        {
            await EnsureApiBaseUrlAsync();
            if (string.IsNullOrEmpty(babyApiBaseUrl))
            {
                ErrorMessage = "API endpoint not configured.";
                return false;
            }
            var loginUser = new User { Username = Username, Password = Password };
            var response = await _http.PostAsJsonAsync($"{babyApiBaseUrl}/users/login", loginUser);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResult>();
                Token = result?.token;
                CurrentUser = result?.user;
                ErrorMessage = string.Empty;
                return true;
            }
            ErrorMessage = "Login failed. Please try again.";
            return false;
        }

        public class AppConfig
        {
            public string BabyApiBaseUrl { get; set; } = string.Empty;
        }

        public class LoginResult
        {
            public string token { get; set; } = string.Empty;
            public User user { get; set; } = new User();
        }
    }
}
