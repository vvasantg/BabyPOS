@page "/register"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Register</h3>
<div class="register-form">
    <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>
            <label>Username</label>
            <InputText @bind-Value="registerModel.Username" class="form-control" />
        </div>
        <div>
            <label>Email</label>
            <InputText @bind-Value="registerModel.Email" class="form-control" />
        </div>
        <div>
            <label>Password</label>
            <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Register</button>
    </EditForm>
    <div style="margin-top:12px">
        <NavLink href="/login">???????????? ???????????</NavLink>
    </div>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="text-danger">@errorMessage</div>
    }
</div>

@code {
    public class RegisterModel
    {
        public string Username { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    RegisterModel registerModel = new();
    string? errorMessage;

    private async Task HandleRegister()
    {
        errorMessage = null;
        var response = await Http.PostAsJsonAsync("http://localhost:5179/api/users/register", registerModel);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            errorMessage = "Register failed. Please try again.";
        }
    }
}
